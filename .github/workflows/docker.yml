# GitHub actions workflow which builds and publishes the docker images.

name: Build docker images

on:
  schedule:
    - cron: '0 1 * * *'
  push:
    branches:
      - "**"
    paths:
      - "release-versions/synapse-latest.txt"
  workflow_dispatch:
    inputs:
      branch:
        type: choice
        options:
          - master
          - develop
      version_number:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build-unified:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: dorny/paths-filter@v2
        if: ${{ github.event_name != 'schedule' }}
        id: changes
        with:
          filters: |
            release:
              - 'release-versions/synapse-latest.txt'
            prerelease:
              - 'release-versions/synapse-prerelease.txt'
          initial-fetch-depth: '1'

#      - name: Set up QEMU
#        id: qemu
#        uses: docker/setup-qemu-action@v2
#        with:
#          platforms: arm64

      - name: Get Version
        # Only bother getting the release version if the version file has been updated
        if: steps.changes.outputs.release == 'true' || steps.changes.outputs.prerelease == 'true'
        id: get_version
        run: |
          echo "synapse_latest_version=$(cat release-versions/synapse-latest.txt)" >> $GITHUB_OUTPUT
          echo "synapse_prerelease_version=$(cat release-versions/synapse-prerelease.txt)" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Latest Image
        if: steps.changes.outputs.release == 'true'
        uses: docker/build-push-action@v4
        with:
          push: true
          context: .
          labels: "gitsha1=${{ github.sha }}"
          tags: |
            realtyem/synapse:latest
            realtyem/synapse:${{ steps.get_version.outputs.synapse_latest_version }}
          build-args: |
            SYNAPSE_VERSION=${{ steps.get_version.outputs.synapse_latest_version }}
          file: "Dockerfile-unified"
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and Push Pre-Release Image
        if: steps.changes.outputs.prerelease == 'true'
        uses: docker/build-push-action@v4
        with:
          push: true
          context: .
          labels: "gitsha1=${{ github.sha }}"
          tags: |
            realtyem/synapse:${{ steps.get_version.outputs.synapse_prerelease_version }}
          build-args: |
            SYNAPSE_VERSION=${{ steps.get_version.outputs.synapse_prerelease_version }}
          file: "Dockerfile-unified"
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and Push Nightly Image
        if: github.event_name == 'schedule'
        uses: docker/build-push-action@v4
        with:
          push: true
          context: .
          tags: "realtyem/synapse:nightly"
          build-args: |
            SYNAPSE_VERSION=develop
          file: "Dockerfile-unified"
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
