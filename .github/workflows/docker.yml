# GitHub actions workflow which builds and publishes the docker images. Three images can come from this run
# 1. A latest image which is based on an actual release, also tagged with version number in format 'v*.*.*'
# 2. A prerelease image which is based on release candidates. This is only tagged with a version, 'v*.*.*'
# 3. A nightly image, which is based on the develop branch and is cut at 1 UTC which is about 8pm in my timezone

# All are automated builds, by checking the matrix-org repo once a day and if a new release is found building
# the image, or in the case of nightly just building it every night, even weekends(sometimes things get committed
# then too).

# Added 2023.03.16: Push to GHCR.io registry as well. According to:
# https://docs.github.com/en/actions/publishing-packages/publishing-docker-images#publishing-images-to-docker-hub-and-github-packages
# it is as simple as logging into both dockerhub and ghcr.io and then updating the tags to reference both places. It's unclear
# if the image to go to dockerhub should be prefixed with 'docker.io' or not. Write permissions active for 'packages' is an
# important detail.

# Might add a pull request/experimental image build later on.

name: Build docker images

on:
  schedule:
    - cron: '0 1 * * *'
  push:
    branches:
      - "**"
    paths:
      - "release-versions/**"
  workflow_dispatch:
    inputs:
      branch:
        type: choice
        options:
          - master
          - develop
      version_number:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write

jobs:
  build-unified:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: dorny/paths-filter@v2
        if: ${{ github.event_name != 'schedule' }}
        id: changes
        with:
          filters: |
            release:
              - 'release-versions/synapse-latest.txt'
            prerelease:
              - 'release-versions/synapse-prerelease.txt'
          initial-fetch-depth: '1'

#      - name: Set up QEMU
#        id: qemu
#        uses: docker/setup-qemu-action@v2
#        with:
#          platforms: arm64

      - name: Get Version
        # It seems harmless to just let this work even if not building a new release
        id: get_version
        run: |
          echo "synapse_latest_version=$(cat release-versions/synapse-latest.txt)" >> $GITHUB_OUTPUT
          echo "synapse_prerelease_version=$(cat release-versions/synapse-prerelease.txt)" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to GHCR.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Latest Image
        if: ${{ steps.changes.outputs.release == 'true' || github.event_name == 'workflow_dispatch' }}
        uses: docker/build-push-action@v4
        with:
          push: true
          context: .
          labels: "gitsha1=${{ github.sha }}"
          tags: |
            realtyem/synapse:latest
            realtyem/synapse:${{ steps.get_version.outputs.synapse_latest_version }}
            ghcr.io/realtyem/synapse:latest
            ghcr.io/realtyem/synapse:${{ steps.get_version.outputs.synapse_latest_version }}
          build-args: |
            SYNAPSE_VERSION=${{ steps.get_version.outputs.synapse_latest_version }}
          file: "Dockerfile-unified"
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and Push Pre-Release Image
        if: ${{ steps.changes.outputs.prerelease == 'true' || github.event_name == 'workflow_dispatch' }}
        uses: docker/build-push-action@v4
        with:
          push: true
          context: .
          labels: "gitsha1=${{ github.sha }}"
          tags: |
            realtyem/synapse:${{ steps.get_version.outputs.synapse_prerelease_version }}
            ghcr.io/realtyem/synapse:${{ steps.get_version.outputs.synapse_prerelease_version }}
          build-args: |
            SYNAPSE_VERSION=${{ steps.get_version.outputs.synapse_prerelease_version }}
          file: "Dockerfile-unified"
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and Push Nightly Image
        if: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
        uses: docker/build-push-action@v4
        with:
          push: true
          context: .
          tags: |
            realtyem/synapse:nightly
            ghcr.io/realtyem/synapse:nightly
          build-args: |
            SYNAPSE_VERSION=develop
          file: "Dockerfile-unified"
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
